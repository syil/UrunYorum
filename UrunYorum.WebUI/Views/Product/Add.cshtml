@model UrunYorum.Data.Entities.Product

@{
    ViewBag.Title = "Add";
}

<h2>Add</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Product</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductName)
            @Html.ValidationMessageFor(model => model.ProductName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsApporoved)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsApporoved)
            @Html.ValidationMessageFor(model => model.IsApporoved)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsDeleted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsDeleted)
            @Html.ValidationMessageFor(model => model.IsDeleted)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ManufacturingYear)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ManufacturingYear)
            @Html.ValidationMessageFor(model => model.ManufacturingYear)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShortDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShortDescription)
            @Html.ValidationMessageFor(model => model.ShortDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MetaKeywords)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MetaKeywords)
            @Html.ValidationMessageFor(model => model.MetaKeywords)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SumRating)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SumRating)
            @Html.ValidationMessageFor(model => model.SumRating)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ManufacturerId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ManufacturerId)
            @Html.ValidationMessageFor(model => model.ManufacturerId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UpdateDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UpdateDate)
            @Html.ValidationMessageFor(model => model.UpdateDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FullDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FullDescription)
            @Html.ValidationMessageFor(model => model.FullDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.InsertDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.InsertDate)
            @Html.ValidationMessageFor(model => model.InsertDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AddedById)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AddedById)
            @Html.ValidationMessageFor(model => model.AddedById)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
